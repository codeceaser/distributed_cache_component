kubectl delete configmap trust-store-config
kubectl delete configmap key-store-config
kubectl delete configmap ignite-config


kubectl create configmap trust-store-config --from-file=truststore.jks -n default
kubectl create configmap key-store-config --from-file=keystore.jks -n default
kubectl create configmap ignite-config --from-file=node-configuration.xml -n default
kubectl create configmap ignite-log-config --from-file=ignite-log4j.xml -n default

kubectl create configmap key-store-config --from-file=keystore.jks=keystore.jks
kubectl create configmap trust-store-config --from-file=truststore.jks=keystore.jks

kubectl create secret generic key-store-secret --from-file=keystore.jks=./keystore.jks
kubectl create secret generic trust-store-secret --from-file=truststore.jks=./truststore.jks

kubectl get secret key-store-secret -o jsonpath="{.data.keystore\.jks}" | base64 --decode > keystore1.jks
kubectl get secret trust-store-secret -o jsonpath="{.data.truststore\.jks}" | base64 --decode > truststore1.jks



keytool -genkeypair -alias ignite_ssl_conf -keyalg RSA -keysize 2048 -storetype PKCS12 -keystore keystore.jks -validity 3650 -storepass changeit -keypass changeit
keytool -exportcert -alias ignite_ssl_conf -keystore keystore.jks -rfc -file cert.cer -storepass changeit
keytool -importcert -alias ignite_ssl_conf -keystore truststore.jks -file cert.cer -storepass changeit -noprompt

keytool -genkeypair -alias distributed_cache_ssl_conf -keyalg RSA -keysize 2048 -storetype PKCS12 -keystore distributed_cache_keystore.jks -validity 3650 -storepass changeit -keypass changeit
keytool -exportcert -alias distributed_cache_ssl_conf -keystore distributed_cache_keystore.jks -rfc -file distributed_cache_cert.cer -storepass changeit
keytool -importcert -alias distributed_cache_ssl_conf -keystore distributed_cache_truststore.jks -file distributed_cache_cert.cer -storepass changeit -noprompt
keytool -import -trustcacerts -file ignite_cert.cer -alias ignite_server -keystore distributed_cache_truststore.jks -storepass changeit

keytool -importcert -alias ignite_ssl_conf -keystore truststore.jks -file distributed_cache_cert.cer -storepass changeit -noprompt

kubectl create secret generic distributed-cache-key-store-secret --from-file=keystore.jks=./distributed_cache_keystore.jks
kubectl create secret generic distributed-cache-trust-store-secret --from-file=truststore.jks=./distributed_cache_truststore.jks

openssl x509 -outform der -in apiserver.crt -out apiserver.cer
keytool -import -trustcacerts -file apiserver.cer -alias apiserver -keystore truststore.jks -storepass changeit
keytool -list -keystore truststore.jks -storepass changeit
minikube logs | grep -i 'ssl\|tls\|handshake'


kubectl exec -it <pod-name> -- curl -k https://kubernetes.default.svc.cluster.local

------

Every time I rebuild the distributed-cache image, I need to delete the old pod and create a new one.
Also I have to restart the ignite cluster to make it work!


------ commands to start docker container for kafka
# Add the Bitnami chart repository to Helm
helm repo add bitnami https://charts.bitnami.com/bitnami

# Update the Helm chart repository
helm repo update

# Install Kafka using the Bitnami Kafka Helm chart
helm install kafka bitnami/kafka

----- commands to start docker container for elasticsearch
helm repo add elastic https://helm.elastic.co
helm repo update
helm install --name elasticsearch elastic/elasticsearch --set imageTag=7.9.3
kubectl get pods
kubectl get service
helm uninstall elasticsearch
docker run --name elasticsearch -p 9200:9200 -p 9300:9300 -e "discovery.type=single-node" -e "network.host=0.0.0.0" docker.elastic.co/elasticsearch/elasticsearch:7.9.3




